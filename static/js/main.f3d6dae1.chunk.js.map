{"version":3,"sources":["tools.js","index.js"],"names":["printPower","power","visualPower","number","Math","ceil","unit","toFixed","powerDraw","selectedFixtures","forEach","fixture","quantity","Number","getObj","list","keyName","id","foundObj","obj","APPDATA","FixtureRow","props","handleFixtureChange","bind","handleRemoveButtonClick","handleFixtureClick","e","this","onFixtureChange","target","value","onRemoveButtonClick","onFixtureClick","removeButton","selected","class","type","onClick","quantityShown","manufacturer","name","onKeyPress","key","preventDefault","placeholder","onChange","onKeyDown","evt","includes","weight","React","Component","FixtureTable","fixtureId","filterText","currentTruss","rows","fixtures","toLowerCase","fixtureSelectedOrNot","selectFixture","truss","push","SearchBar","handleFilterTextChange","handleProdCoChange","onFilterTextChange","onProdCoChange","FilterableFixtureTable","state","productionCo","setState","SelectedFixturesTable","fixtureCount","TotalPower","TotalAmps","amps","TotalWeight","Totals","FixtureSelector","FixtureDetails","manual","href","rel","specSheet","Review","Header","searchExtended","handleBackClick","handleSearchClick","handleClearSearch","text","onBackClick","leftIcon","rightIcon","title","headerClass","mode","fixtureView","selectedFixture","Footer","handleBuildMode","onModeChange","reviewStyle","fontWeight","buildStyle","searchIcon","listIcon","style","data-mode","pointer-events","App","projectFixtures","console","log","dataset","newMode","parseInt","updatedSelectedFixtures","slice","newFixture","fixtureAlreadySelected","remainingFixtures","filter","page","trussList","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","ReactDOM","render","document","querySelector","open","send"],"mappings":"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","file":"static/js/main.f3d6dae1.chunk.js","sourcesContent":["//function to prettify power results - number in, string out\nfunction printPower (power) {\n    let visualPower = {\n        number: Math.ceil(power),\n        unit: \"W\"\n    };\n\n    if (power>1000) {\n        visualPower = {\n            number: (power/1000).toFixed(1),\n            unit: \"kW\"\n\n        }\n    }\n\n    return visualPower;\n}\n\n\n\n//function to get total power draw from selected fixtures\nfunction powerDraw (selectedFixtures) {\n    let power = 0;\n    if (selectedFixtures) {\n        selectedFixtures.forEach((fixture) => {\n            if (fixture.quantity >= 1) {\n                power += Number(fixture.power)*Number(fixture.quantity);\n            }\n        });\n    }\n    return power;\n}\n\n\n//Function to return an object from list using key\nfunction getObj (list, keyName, id) {\n    let foundObj;\n    list.forEach((obj) => {\n        if (obj[keyName]===id) {\n            foundObj = { ...obj};\n            return;\n        }\n    });\n    return foundObj;\n}\n\nexport {printPower, powerDraw, getObj}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {printPower, powerDraw, getObj} from './tools.js'\nimport {IoIosSearch, IoIosList, IoIosListBox, IoIosArrowBack, \n        IoMdAddCircleOutline, IoMdAddCircle, \n        IoMdClose,\n        IoIosAdd} from 'react-icons/io'\n\nvar APPDATA;\nconst VOLTAGE = 230;\n\n/*Components\nA) App  \n    mode (search, review, fixture) -- state\n    filter text --state\n    projectfixtures --state\n    fixture selected --state\n    \n    1) Footer\n        mode -- props\n    \n    2) Header\n    mode --props\n    filter text --props\n    fixture selected --props\n\n    3) Fixture Table\n    mode --props\n    projectfixtures --props\n    search text --props\n    \n        a) Fixture Row\n            fixture --props\n    \n    4) Fixture Details\n        fixture selected --props\n\n*/\n\nclass FixtureRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        this.handleFixtureClick = this.handleFixtureClick.bind(this);\n    }\n    handleFixtureChange(e) {\n        this.props.onFixtureChange(this.props.fixture.id, e.target.value);\n    }\n\n    handleRemoveButtonClick() {\n        this.props.onRemoveButtonClick(this.props.fixture.id);\n    }\n\n    handleFixtureClick(e) {\n        this.props.onFixtureClick(this.props.fixture)\n    }\n\n    render() {\n        const fixture = this.props.fixture;\n        let removeButton = \"\";\n        if (fixture.selected) {\n            removeButton = (<button \n                class = \"remove-button\"\n                type=\"button\" \n                onClick={this.handleRemoveButtonClick}\n                >\n                <IoMdClose class=\"remove-button-x\"/>\n                </button>)\n        }\n        let quantityShown = \"\";\n        if(fixture.quantity) {\n            quantityShown = fixture.quantity;\n        }\n        //let plusSign = (<IoIosAdd/>);\n        return (\n            <div class=\"fixture-row\">\n                <div \n                    onClick={this.handleFixtureClick}\n                >\n                    <div>\n                        {fixture.manufacturer} \n                        {\" \"}\n                        {fixture.name}\n                    </div>\n                </div>\n                <div>\n                    <form \n                        class=\"quantity-input\"\n                        onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\n                    >\n                        <input \n                        //background-image={plusSign}\n                        placeholder=\"+\"\n                        type=\"number\"\n                        value={quantityShown}\n                        onChange={this.handleFixtureChange}\n                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                        />\n                    </form>\n                </div>\n                <div>{removeButton}</div>\n                <div class=\"fixture-in-row-details\">Weight: {fixture.weight}kg Power: {fixture.power}w</div>\n                <div></div>\n                <div></div>\n            </div>\n        )\n    };\n}\n\nclass FixtureTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        this.handleFixtureClick = this.handleFixtureClick.bind(this);\n    }\n\n    handleFixtureChange(fixtureId,quantity) {\n        this.props.onFixtureChange(fixtureId,quantity);\n    }\n\n    handleRemoveButtonClick(fixtureId) {\n        this.props.onRemoveButtonClick(fixtureId);\n    }\n\n    handleFixtureClick(fixture) {\n        this.props.onFixtureClick(fixture)\n    }\n\n    render() {\n        const filterText = this.props.filterText;\n        //const productionCo = this.props.productionCo;\n        const currentTruss = this.props.currentTruss;\n\n        const rows = [];\n        \n        this.props.fixtures.forEach((fixture) => {\n\n            //filter by search\n            if (!fixture.manufacturer.toLowerCase().includes(filterText.toLowerCase()) &&\n            !fixture.name.toLowerCase().includes(filterText.toLowerCase())) {\n                return;\n            }\n\n            // //filter by truss\n            // if (fixture.truss) {\n            //     if (fixture.truss !== currentTruss) {\n            //         return;\n            //     }\n            // }\n\n            // //ignore default filter if search has value\n            // if (!(filterText && productionCo === \"default\")) {\n            // //filter by production Company (or default)\n            //     if(productionCo !== \"\") {\n            //         if (!fixture.productionCos.includes(productionCo.toLowerCase())) {\n            //             return;\n            //         }\n            //     }\n            // }\n\n            //replace with selected fixture if necessary\n\n            let fixtureSelectedOrNot = fixture;\n            if (this.props.selectedFixtures) {\n                this.props.selectedFixtures.forEach((selectFixture) => {\n                    if (selectFixture.id === fixture.id && selectFixture.truss===currentTruss) {\n                        fixtureSelectedOrNot = selectFixture;\n                        return;\n                    }\n                })\n            }\n\n            rows.push(\n                <FixtureRow\n                    fixture={fixtureSelectedOrNot}\n                    key = {fixture.id} \n                    onFixtureChange={this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    onFixtureClick={this.handleFixtureClick}\n                    />\n            );\n        });\n\n        return (\n            <div \n                class=\"fixture-table\"\n            >                \n                {rows}\n            </div>\n\n                \n\n        );\n    }\n}\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n        this.handleProdCoChange = this.handleProdCoChange.bind(this);\n    }\n\n    handleFilterTextChange(e) {\n        this.props.onFilterTextChange(e.target.value);\n    }\n\n    handleProdCoChange(e) {\n        this.props.onProdCoChange(e.target.value);\n    }\n\n    render() {\n        const filterText = this.props.filterText;\n\n        return (\n            <form\n                //onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\n            >\n                <input \n                    class = \"search\"\n                    type=\"text\" \n                    placeholder=\"Search\" \n                    value={filterText} \n                    onChange={this.handleFilterTextChange}\n                />\n                {/* <p>\n                    <select onChange={this.handleProdCoChange}>\n                        <option value = \"default\">Filter by Production Co.</option>\n                        <option value = \"CSE\">CSE</option>\n                        <option value = \"Siyan\">Siyan</option>\n                    </select>\n                </p> */}\n            </form>\n        )\n    }\n}\n\nclass FilterableFixtureTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterText: '',\n            productionCo: 'default'\n        };\n\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n        this.handleProdCoChange = this.handleProdCoChange.bind(this);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        this.handleFixtureClick = this.handleFixtureClick.bind(this);\n    }\n\n    handleFilterTextChange(filterText) {\n        this.setState({\n            filterText: filterText\n        });\n    }\n\n    handleProdCoChange(productionCo) {\n        this.setState({\n            productionCo: productionCo\n        });\n    }\n\n    handleFixtureChange(fixtureId, quantity) {\n        this.props.onFixtureChange(fixtureId, quantity);\n    }\n\n    handleRemoveButtonClick(fixtureId) {\n        this.props.onRemoveButtonClick(fixtureId);\n    }\n\n    handleFixtureClick(fixture) {\n        this.props.onFixtureClick(fixture)\n    }\n\n    render() {\n        return (\n            <div>\n                <FixtureTable \n                    fixtures={this.props.fixtures} \n                    selectedFixtures={this.props.selectedFixtures}\n                    filterText={this.props.filterText} \n                    productionCo={this.state.productionCo}\n                    onFixtureChange={this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    currentTruss={this.props.currentTruss}\n                    onFixtureClick={this.handleFixtureClick}\n                 />\n            </div>\n        )\n    }\n}\n\nclass SelectedFixturesTable extends React.Component {\n    constructor (props) {\n        super(props);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        this.handleFixtureClick = this.handleFixtureClick.bind(this);\n    }\n\n    handleFixtureChange (fixtureId,quantity) {\n        this.props.onFixtureChange(fixtureId,quantity);\n    }\n\n    handleRemoveButtonClick(fixtureId) {\n        this.props.onRemoveButtonClick(fixtureId);\n    }\n\n    handleFixtureClick(fixture) {\n        this.props.onFixtureClick(fixture);\n    }\n\n    render() {\n        let fixtureCount = 0;\n        this.props.selectedFixtures.forEach((fixture) =>{\n            fixtureCount += Number(fixture.quantity);\n        });\n        return (\n            <div>\n                <h2>\n                    Selected Fixtures ({fixtureCount})\n                </h2>\n                <FixtureTable \n                fixtures={this.props.selectedFixtures} \n                filterText={\"\"} \n                productionCo={\"\"}\n                onFixtureChange={this.handleFixtureChange}\n                onRemoveButtonClick={this.handleRemoveButtonClick}\n                currentTruss={this.props.currentTruss}\n                onFixtureClick={this.handleFixtureClick}\n                 />\n            </div>\n        )\n    }\n}\n\nclass BalancePhases extends React.Component {\n    render () {\n        //let loadperPhase = powerDraw(this.props.selectedFixtures) / 3;\n        let fixturePhaseSplit = [];\n        let fixtureTypes = [];\n        let phaseLoad = [0,0,0]\n\n        //Check what fixture types there are in project\n        this.props.selectedFixtures.forEach((fixture) => {\n            if(!fixtureTypes.includes(fixture.id)) {\n                fixtureTypes.push(fixture.id);\n            }\n        });\n        //add up fixture totals\n        fixtureTypes.forEach((id) => {\n            //check highest Phase, get index of next phase\n            let indexNextPhase = 0;\n            if (phaseLoad[0] !== phaseLoad[1] || phaseLoad[0] !== phaseLoad[2] || phaseLoad[1] !== phaseLoad[2]){\n                let maxPower=0;\n                \n                phaseLoad.forEach((load) => {\n                    if (load>maxPower){\n                        maxPower = load;\n                    }\n                });\n                indexNextPhase = phaseLoad.indexOf(maxPower) + 1;\n            }\n            let fixture = getObj(this.props.selectedFixtures,'id',id);\n            let phaseCount = [0,0,0];\n            let sum = 0;\n            //bit boring here because fixtures could be selected twice under different truss\n            this.props.selectedFixtures.forEach((fixture) => {\n                if (fixture.id === id) {\n                    sum += fixture.quantity;\n                }\n            });\n            //round robin phases\n            for (let i=0;i<sum; i++) {\n                phaseCount[(indexNextPhase+i)%3] ++;\n                if(fixture) {\n                    phaseLoad[(indexNextPhase+i)%3] += fixture.power;\n                }\n            }\n            fixturePhaseSplit.push((<div>{getObj(this.props.selectedFixtures,'id',id).fixture}</div>));\n            phaseCount.forEach((phase) => {\n                fixturePhaseSplit.push((<div>{phase}</div>));\n            })\n        });\n\n        let printablePhaseLoads = phaseLoad.map((phase) => {\n            return((<div>{printPower(phase)}</div>));\n        });\n        let printablePhaseAmps = phaseLoad.map((phase) => {\n            return((<div>{Math.ceil(phase/VOLTAGE)}A</div>));\n        });\n        return (\n            <div>\n                <h2>Phase Balance</h2>\n                <div class=\"phase-table\">\n                    <div></div>\n                    <div>Φ1</div>\n                    <div>Φ2</div>\n                    <div>Φ3</div>\n                    {fixturePhaseSplit}\n                </div>\n                -------------------------------------\n                <div>Total</div>\n                <div class=\"phase-table\">\n                    <div>Power</div>\n                    {printablePhaseLoads}\n                    <div>Current</div>\n                    {printablePhaseAmps}\n                </div>\n            </div>\n        );\n    }\n}\nclass TotalPower extends React.Component {\n\n    render() {\n        let power = powerDraw(this.props.selectedFixtures);\n\n        let amps = power / VOLTAGE;\n\n        return (\n            <div class=\"review-power\">\n                <span class=\"review-total\">{printPower(power).number}</span>\n                <span class=\"review-unit\">{printPower(power).unit}</span>\n                {/* <p>\n                    {Math.ceil(amps)}A\n                </p> */}\n            </div>\n        )\n    }\n}\n\nclass TotalAmps extends React.Component {\n    render() {\n        let power = powerDraw(this.props.selectedFixtures);\n\n        let amps = power / VOLTAGE;\n\n        return (\n            <div class=\"review-amps\">\n                <span class=\"review-total \">{Math.ceil(amps)}</span>\n                <span \n                    class=\"review-unit\"\n                    >\n                    A\n                    <sup>({VOLTAGE}v)\n                    </sup>\n                </span>\n            </div>\n        )\n    }\n\n}\n\nclass TotalWeight extends React.Component {\n\n    render() {\n        let weight = 0;\n        if (this.props.selectedFixtures) {\n            this.props.selectedFixtures.forEach((fixture) => {\n                if (fixture.quantity >=1) {\n                    weight += Number(fixture.weight)*Number(fixture.quantity);\n                }\n            });\n        }\n\n\n        return (\n            <div class=\"review-weight\">\n                <span class=\"review-total\">{weight.toFixed(0)}</span>\n                <span class=\"review-unit\">kg</span>\n            </div>\n        )\n    }\n}\n\nclass TrussBreakdown extends React.Component {\n    render() {\n        let trussBreakdowns = [];\n        this.props.trussList.forEach((truss) => {\n            let trussSelected = [];\n            this.props.selectedFixtures.forEach((fixture) => {\n                if(fixture.truss === truss) {\n                    trussSelected.push(fixture);\n                }\n            })\n            trussBreakdowns.push(\n                <Totals \n                    name={truss}\n                    selectedFixtures={trussSelected}\n                />\n            );\n        });\n        return (\n            <div>\n                {trussBreakdowns}\n            </div>\n        )\n    }\n}\nclass Totals extends React.Component {\n\n    render () {\n        let fixtureCount = 0;\n        this.props.selectedFixtures.forEach((fixture) =>{\n            fixtureCount += Number(fixture.quantity);\n        });\n        return (\n            <div >\n                <div class=\"totals\">\n                    <TotalPower selectedFixtures={this.props.selectedFixtures}/>\n                    \n                        <TotalWeight selectedFixtures={this.props.selectedFixtures}/>\n                        {/* <p>Fixture Count: {fixtureCount}</p> */}\n                    <TotalAmps selectedFixtures={this.props.selectedFixtures}/>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nclass FixtureSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        //this.handleSelectedFixtureChange = this.handleSelectedFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        }\n\n    handleFixtureChange (fixtureId,quantity) {\n        this.props.onFixtureChange(fixtureId,quantity);\n    }\n\n    handleRemoveButtonClick(fixtureId) {\n        this.props.onRemoveButtonClick(fixtureId);\n    }\n\n    render() {\n        return (\n            <div class=\"fixture-selector\">\n                <FilterableFixtureTable \n                    fixtures = {APPDATA.fixtures}\n                    selectedFixtures={this.props.selectedFixtures}\n                    onFixtureChange = {this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    currentTruss={this.props.currentTruss}\n                />\n                <SelectedFixturesTable \n                    selectedFixtures={this.props.selectedFixtures} \n                    onFixtureChange={this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    currentTruss={this.props.currentTruss}\n                />\n            </div>\n        )\n    }\n}\n\nclass TrussSelector extends React.Component {\n    constructor(props) {\n        super(props);\n    this.handleTrussSelect = this.handleTrussSelect.bind(this);\n    }\n\n    handleTrussSelect (e) {\n        this.props.onTrussSelect(e.target.dataset.truss)\n    }\n\n    render () {\n        let trussSeperated = [];\n        this.props.trussList.forEach((trussName)=>{\n            trussSeperated.push(\n                <div\n                    style={(this.props.currentTruss===trussName)?{\n                        fontWeight: \"bold\"\n                    }:{\n                        fontWeight: \"lighter\"\n                    }}\n                    data-truss={trussName}\n                    onClick={this.handleTrussSelect}>\n                    {trussName}\n                </div>\n            )\n        });\n        return (\n            <div id=\"truss-selector\">\n                {trussSeperated}\n            </div>\n        )\n    }\n}\n\nclass Build extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        this.handleTrussSelect = this.handleTrussSelect.bind(this);\n    }\n\n    handleTrussSelect (trussName) {\n        this.props.onTrussSelect(trussName);\n    }\n\n    handleFixtureChange (fixtureId, quantity) {\n        this.props.onFixtureChange(fixtureId, quantity);\n    }\n\n    handleRemoveButtonClick (fixtureId) {\n        this.props.onRemoveButtonClick(fixtureId);\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <TrussSelector\n                    onTrussSelect={this.handleTrussSelect}\n                    trussList = {this.props.trussList}\n                    currentTruss={this.props.currentTruss}\n                /> */}\n                <FixtureSelector \n                    selectedFixtures={this.props.selectedFixtures}\n                    onFixtureChange={this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    currentTruss={this.props.currentTruss}\n                />\n                <div class=\"total-footer\">\n                    <Totals \n                        selectedFixtures={this.props.selectedFixtures}\n                        name=\"Total\"\n                    />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nclass FixtureDetails extends React.Component {\n    render() {\n        let manual = (this.props.fixture.manual)?(\n            <a \n                href={this.props.fixture.manual} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n            >\n                Manual\n            </a>\n        ):\"\";\n        let specSheet = (this.props.fixture.specSheet)?(\n            <a \n                href={this.props.fixture.specSheet} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n            >\n                Spec Sheet\n            </a>\n        ):\"\";\n        return(\n            <div class=\"fixture-details\">\n                <div>Manufacturer: {this.props.fixture.manufacturer}</div>\n                <div>Weight: {this.props.fixture.weight}kg</div>\n                <div>Power: {this.props.fixture.power}W</div>\n                <div>Type: {this.props.fixture.type}</div>\n                <div>Docs: {manual} {specSheet}</div>\n                {/* <div>Rented by: {this.props.fixture.productionCos}</div> */}\n            </div>\n        )\n    }\n}\n\nclass Review extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        //this.handleSelectedFixtureChange = this.handleSelectedFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        this.handleFixtureClick = this.handleFixtureClick.bind(this);    \n        }\n\n        handleFixtureChange (fixtureId,quantity) {\n            this.props.onFixtureChange(fixtureId,quantity);\n        }\n    \n        handleRemoveButtonClick(fixtureId) {\n            this.props.onRemoveButtonClick(fixtureId);\n        }\n\n        handleFixtureClick(fixture) {\n            this.props.onFixtureClick(fixture);\n        }\n\n    render() {\n        return(\n            <div>\n                {/* <div class=\"review-details\">\n                    <TrussBreakdown \n                        selectedFixtures={this.props.selectedFixtures}\n                        trussList = {this.props.trussList}\n                    />   \n                    <BalancePhases\n                        selectedFixtures={this.props.selectedFixtures}\n                    />\n                </div> */}\n                <div >\n                    <Totals \n                        selectedFixtures={this.props.selectedFixtures}\n                        name=\"Totals\"\n                    /> \n                </div> \n                <div>\n                    <SelectedFixturesTable \n                        selectedFixtures={this.props.selectedFixtures} \n                        onFixtureChange={this.handleFixtureChange}\n                        onRemoveButtonClick={this.handleRemoveButtonClick}\n                        currentTruss={this.props.currentTruss}\n                        onFixtureClick={this.handleFixtureClick}\n                    />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nclass Header extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state ={\n            searchExtended: false,\n        };\n        this.handleFilterTextChange=this.handleFilterTextChange.bind(this);\n        this.handleBackClick = this.handleBackClick.bind(this);\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this.handleClearSearch = this.handleClearSearch.bind(this);\n    }\n\n    handleFilterTextChange(text) {\n        this.props.onFilterTextChange(text);\n    }\n\n    handleBackClick(e) {\n        if (this.state.searchExtended) {\n            this.props.onFilterTextChange(\"\");\n            this.setState ({\n                searchExtended: false,\n            })\n        } else {\n            this.props.onBackClick(e);\n        }\n    }\n    handleSearchClick(e) {\n        this.setState({\n                searchExtended: true,\n            })\n    }\n\n    handleClearSearch(e) {\n        this.props.onFilterTextChange(\"\");\n    }\n\n    render() {\n        let leftIcon;\n        let rightIcon;\n        let title;\n        //let backLink;\n        //let searchBar;\n        let headerClass = \"header\";\n        // let searchBarExtend = (<SearchBar \n        //         filterText={this.props.filterText} \n        //         onFilterTextChange={this.handleFilterTextChange}\n        //         //onProdCoChange={this.handleProdCoChange}\n        //         />)\n        switch (this.props.mode) {\n            case \"build\":\n                switch (this.state.searchExtended) {\n                    case true:\n                        title = (<div>\n                            <SearchBar \n                        filterText={this.props.filterText} \n                        onFilterTextChange={this.handleFilterTextChange}\n                        //onProdCoChange={this.handleProdCoChange}\n                        />\n                        </div>);\n                        leftIcon = (<div \n                                class=\"left-icon-div\" \n                                onClick={this.handleBackClick}>\n                                <IoIosArrowBack class=\"left-icon\"/>\n                            </div>);\n                        // rightIcon = (<IoMdClose \n                        //     class=\"right-icon\"\n                        //     onClick={this.handleClearSearch}\n                        //     />\n                        //     )\n                        headerClass = \"header-search\";\n                        rightIcon = (<div></div>);\n                        break;\n                    default:\n                        title = (<h1>PatchPal</h1>);\n                        leftIcon =  (\n                            <div \n                                class=\"left-icon-div\"\n                                onClick={this.handleSearchClick}>\n                                <IoIosSearch class=\"left-icon\"/>\n                            </div>\n                            );\n                            rightIcon= (<div></div>);\n                        //backLink = (<div></div>);\n                        headerClass = \"header\";\n                }\n                break;\n            case \"review\":\n                title = (\n                    <h1>Summary</h1>\n                );\n                leftIcon = (<div></div>);\n                headerClass = \"header-review\";\n                rightIcon = (<div></div>);\n                break;\n            default:\n                leftIcon= (<div></div>);\n                rightIcon=(<div></div>);\n                title = (\n                    <h1>PatchPal</h1>\n                );\n        }\n\n        if (this.props.fixtureView) {\n            leftIcon = (\n                <div \n                    class=\"left-icon-div\"\n                    onClick={this.handleBackClick}\n                >\n                    <IoIosArrowBack class=\"left-icon\"/>\n                </div>\n            );\n            title = (\n                <h1>{this.props.selectedFixture.name}</h1>\n            );\n            rightIcon=(<div></div>);\n            headerClass = \"header\";\n        }\n \n        return(\n            <div class={headerClass}>\n                {leftIcon}\n                {title}\n                {rightIcon}\n            </div>\n        )\n    }\n}\n\nclass Footer extends React.Component {\n    constructor (props) {\n        super(props);\n        this.handleBuildMode = this.handleBuildMode.bind(this);\n    }\n    handleBuildMode(e) {\n        this.props.onModeChange(e)\n    }\n    render () {\n        let reviewStyle = (this.props.mode===\"review\") ? {fontWeight: 'bold'} : {fontWeight: 'lighter'};\n        let buildStyle = (this.props.mode===\"build\") ? {fontWeight: 'bold'} : {fontWeight: 'lighter'};\n        let searchIcon = (this.props.mode===\"build\") ? (<IoMdAddCircle class=\"footer-icon\"/>) : (<IoMdAddCircleOutline class=\"footer-icon\"/>);\n        let listIcon = (this.props.mode===\"review\") ? (<IoIosListBox class=\"footer-icon\"/>) : (<IoIosList class=\"footer-icon\"/>)\n    \n        return (\n            <div id=\"footer\">\n                <div></div>\n                <div \n                    class = \"child-clicks-this\"\n                    style={buildStyle}\n                    onClick={this.handleBuildMode} \n                    data-mode=\"build\"\n                    >{searchIcon}</div>\n                    <div></div>\n                <div\n                    class = \"child-clicks-this\"\n                    pointer-events= \"none\"\n                    style={reviewStyle}\n                    onClick={this.handleBuildMode} \n                    data-mode=\"review\"\n                >{listIcon}</div>\n                <div></div>\n            </div>\n        )\n    }\n}\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state={\n            ////use trussList to allow user defined trusses at some point\n            //trussList: [\"Project\",\"Truss 1\", \"Truss 2\", \"Truss 3\"],\n            //currentTruss: \"Project\",\n            mode: \"build\",\n            projectFixtures: [],\n            filterText: \"\",\n            selectedFixture: {},\n            fixtureView: false,\n        }\n        this.handleFixtureChange = this.handleFixtureChange.bind(this);\n        this.handleRemoveButtonClick = this.handleRemoveButtonClick.bind(this);\n        //this.handleTrussSelect = this.handleTrussSelect.bind(this);\n        this.handleBuildMode = this.handleBuildMode.bind(this);\n        this.handleFilterTextChange=this.handleFilterTextChange.bind(this);\n        this.handleFixtureClick=this.handleFixtureClick.bind(this);\n        this.handleBackClick=this.handleBackClick.bind(this);\n    }\n    handleBuildMode(e) {\n        console.log(\"Build or review clicked\")\n        console.log(e.target);\n        console.log(e.target.dataset.mode);\n        let newMode= e.target.dataset.mode;\n        if (this.state.mode !== newMode) {\n            this.setState({\n                mode: e.target.dataset.mode,\n                filterText: \"\",\n            });\n        }\n    }\n\n    // handleTrussSelect (trussName) {\n    //     this.setState({\n    //         currentTruss: trussName,\n    //     });\n    // }\n\n    handleFilterTextChange(filterText) {\n        this.setState({\n            filterText: filterText\n        });\n    }\n\n    handleFixtureChange (fixtureId, quantity) {\n        quantity = parseInt(quantity);\n        \n        let updatedSelectedFixtures = this.state.projectFixtures.slice();\n\n        let newFixture = getObj(APPDATA.fixtures,\"id\",fixtureId);\n\n        if (newFixture) {\n            let fixtureAlreadySelected = false;\n            updatedSelectedFixtures.forEach((fixture) => {\n                if (fixture.id === fixtureId && fixture.truss === this.state.currentTruss) {\n                    fixture.quantity = quantity;\n                    fixtureAlreadySelected = true;\n                    return;\n                }\n            })\n\n            if(!fixtureAlreadySelected) {\n                newFixture.quantity = quantity;\n                newFixture.selected = true;\n                newFixture.truss = this.state.currentTruss;\n                updatedSelectedFixtures.push(newFixture);\n            }\n        }\n\n        this.setState({\n            projectFixtures: updatedSelectedFixtures,\n        });\n    }\n\n    handleRemoveButtonClick (fixtureId) {\n        let remainingFixtures = this.state.projectFixtures.filter((fixture) => {\n            return (fixtureId !== fixture.id);\n        });\n        this.setState({\n            projectFixtures: remainingFixtures,\n        });\n    }\n\n    handleFixtureClick(fixture) {\n        this.setState({\n            fixtureView: true,\n            selectedFixture: fixture,\n        });\n    }\n\n    handleBackClick(e) {\n        this.setState({\n            fixtureView: false,\n            selectedFixture: \"\"\n        })\n    }\n\n    render() {\n        let page;\n        if (this.state.fixtureView) {\n            page = (\n                <FixtureDetails\n                    fixture={this.state.selectedFixture}\n                />\n            );\n        } else {\n            if (this.state.mode === \"build\") {\n                page = (\n                    <FilterableFixtureTable \n                    fixtures = {APPDATA.fixtures}\n                    selectedFixtures={this.state.projectFixtures}\n                    onFixtureChange = {this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    filterText={this.state.filterText}\n                    onFixtureClick={this.handleFixtureClick}\n                    //currentTruss={this.props.currentTruss}\n                    />\n                )\n            } else {\n                page = (\n                <Review \n                    trussList = {this.state.trussList}\n                    selectedFixtures={this.state.projectFixtures}\n                    onFixtureChange = {this.handleFixtureChange}\n                    onRemoveButtonClick={this.handleRemoveButtonClick}\n                    onFixtureClick={this.handleFixtureClick}\n                />\n                );\n            }\n        }\n\n        // let reviewStyle = (this.state.mode===\"review\") ? {fontWeight: 'bold'} : {fontWeight: 'lighter'};\n        // let buildStyle = (this.state.mode===\"build\") ? {fontWeight: 'bold'} : {fontWeight: 'lighter'};\n\n        return (\n            <div class=\"app\">\n                <Header\n                    fixtureView = {this.state.fixtureView}\n                    mode={this.state.mode}\n                    selectedFixture={this.state.selectedFixture}\n                    onFilterTextChange={this.handleFilterTextChange}\n                    onBackClick={this.handleBackClick}\n                />\n            <div class=\"page\">\n            {page}\n            </div>\n            \n            <Footer\n                mode={this.state.mode}\n                onModeChange={this.handleBuildMode}\n            />\n            </div>\n        )\n    }\n}\n\n\n\n//Request json and only render page when json retreived\nconst xmlhttp = new XMLHttpRequest();\nxmlhttp.onreadystatechange = function() {\n    if (this.readyState === 4 && this.status === 200) {\n        APPDATA = JSON.parse(this.responseText);\n        \n        ReactDOM.render(\n            <App />,\n            document.querySelector('#root')\n        );\n    }\n};\nxmlhttp.open(\"GET\", \"fixtureData.json\", true);\nxmlhttp.send();"],"sourceRoot":""}